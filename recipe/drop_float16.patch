Submodule external/immvision/immvision contains modified content
diff --git a/external/immvision/immvision/src/immvision/internal/cv/colormap.cpp b/external/immvision/immvision/src/immvision/internal/cv/colormap.cpp
index 2ce15ec..2dfb73c 100644
--- a/external/immvision/immvision/src/immvision/internal/cv/colormap.cpp
+++ b/external/immvision/immvision/src/immvision/internal/cv/colormap.cpp
@@ -12,6 +12,8 @@
 #include <opencv2/core.hpp>
 #include <array>
 #include <optional>
+#include <math.h>
+#include <stdio.h>
 
 namespace ImmVision
 {
@@ -252,10 +254,10 @@ namespace ImmVision
                 return _ApplyColormap<float>(m, settings);
             else if (m.depth() == CV_64F)
                 return _ApplyColormap<double>(m, settings);
-#ifdef CV_16F
-            else if (m.depth() == CV_16F)
-                return _ApplyColormap<cv::float16_t>(m, settings);
-#endif
+// #ifdef CV_16F
+//             else if (m.depth() == CV_16F)
+//                 return _ApplyColormap<cv::float16_t>(m, settings);
+// #endif
             else
             {
                 assert(false);
diff --git a/external/immvision/immvision/src/immvision/internal/cv/matrix_info_utils.cpp b/external/immvision/immvision/src/immvision/internal/cv/matrix_info_utils.cpp
index 312c068..c268f2c 100644
--- a/external/immvision/immvision/src/immvision/internal/cv/matrix_info_utils.cpp
+++ b/external/immvision/immvision/src/immvision/internal/cv/matrix_info_utils.cpp
@@ -79,10 +79,10 @@ namespace ImmVision
                 return GrabValuesFromBuffer<uint16_t>(ptr, nb_channels);
             else if (depth == CV_16S)
                 return GrabValuesFromBuffer<int16_t>(ptr, nb_channels);
-#if CV_MAJOR_VERSION >= 4
-                else if (depth == CV_16F)
-                return GrabValuesFromBuffer<cv::float16_t>(ptr, nb_channels);
-#endif
+// #if CV_MAJOR_VERSION >= 4
+//                 else if (depth == CV_16F)
+//                 return GrabValuesFromBuffer<cv::float16_t>(ptr, nb_channels);
+// #endif
             else if (depth == CV_32S)
                 return GrabValuesFromBuffer<int32_t>(ptr, nb_channels);
             else if (depth == CV_32F)
@@ -135,4 +135,4 @@ namespace ImmVision
 
     } // namespace MatrixInfoUtils
 
-} // namespace ImmVision
\ No newline at end of file
+} // namespace ImmVision
diff --git a/external/immvision/immvision/src_all_in_one/immvision/immvision.cpp b/external/immvision/immvision/src_all_in_one/immvision/immvision.cpp
index 479e8de..52f76f3 100644
--- a/external/immvision/immvision/src_all_in_one/immvision/immvision.cpp
+++ b/external/immvision/immvision/src_all_in_one/immvision/immvision.cpp
@@ -4845,10 +4845,10 @@ namespace ImmVision
                 return _ApplyColormap<float>(m, settings);
             else if (m.depth() == CV_64F)
                 return _ApplyColormap<double>(m, settings);
-#ifdef CV_16F
-            else if (m.depth() == CV_16F)
-                return _ApplyColormap<cv::float16_t>(m, settings);
-#endif
+// #ifdef CV_16F
+//             else if (m.depth() == CV_16F)
+//                 return _ApplyColormap<cv::float16_t>(m, settings);
+// #endif
             else
             {
                 assert(false);
@@ -6039,10 +6039,10 @@ namespace ImmVision
                 return GrabValuesFromBuffer<uint16_t>(ptr, nb_channels);
             else if (depth == CV_16S)
                 return GrabValuesFromBuffer<int16_t>(ptr, nb_channels);
-#if CV_MAJOR_VERSION >= 4
-                else if (depth == CV_16F)
-                return GrabValuesFromBuffer<cv::float16_t>(ptr, nb_channels);
-#endif
+// #if CV_MAJOR_VERSION >= 4
+//                 else if (depth == CV_16F)
+//                 return GrabValuesFromBuffer<cv::float16_t>(ptr, nb_channels);
+// #endif
             else if (depth == CV_32S)
                 return GrabValuesFromBuffer<int32_t>(ptr, nb_channels);
             else if (depth == CV_32F)
@@ -11961,11 +11961,11 @@ namespace ImmVision
     {
 
         using namespace ImmVision::StringUtils;
-        
+
         std::string r;
         r += "ColormapScaleFromStatsData\n";
         r += "{\n";
-    
+
         std::string inner;
 
         inner = inner + "ColorMapStatsType: " + ToString(v.ColorMapStatsType) + "\n";
@@ -11977,16 +11977,16 @@ namespace ImmVision
         r += "}";
         return r;
     }
-    
+
     std::string ToString(const ColormapSettingsData& v)
     {
 
         using namespace ImmVision::StringUtils;
-        
+
         std::string r;
         r += "ColormapSettingsData\n";
         r += "{\n";
-    
+
         std::string inner;
 
         inner = inner + "Colormap: " + ToString(v.Colormap) + "\n";
@@ -11999,16 +11999,16 @@ namespace ImmVision
         r += "}";
         return r;
     }
-    
+
     std::string ToString(const MouseInformation& v)
     {
 
         using namespace ImmVision::StringUtils;
-        
+
         std::string r;
         r += "MouseInformation\n";
         r += "{\n";
-    
+
         std::string inner;
 
         inner = inner + "IsMouseHovering: " + ToString(v.IsMouseHovering) + "\n";
@@ -12024,11 +12024,11 @@ namespace ImmVision
     {
 
         using namespace ImmVision::StringUtils;
-        
+
         std::string r;
         r += "ImageParams\n";
         r += "{\n";
-    
+
         std::string inner;
 
         inner = inner + "RefreshImage: " + ToString(v.RefreshImage) + "\n";
@@ -12059,7 +12059,7 @@ namespace ImmVision
         r += "}";
         return r;
     }
-    
+
 }
 
 
